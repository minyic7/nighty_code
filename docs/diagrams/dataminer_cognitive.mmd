%%{init: {'theme':'dark', 'themeVariables': { 'primaryColor':'#1f2937', 'primaryTextColor':'#fff', 'primaryBorderColor':'#7C3AED', 'lineColor':'#F59E0B', 'secondaryColor':'#6366F1', 'tertiaryColor':'#10B981'}}}%%

graph TB
    %% DataMiner Module - Cognitive Data Extraction Pipeline
    %% All strategies and validation systems are implemented
    
    subgraph Input["üì• Input Layer"]
        RawContent["Raw Content<br/>‚Ä¢ Text/Documents<br/>‚Ä¢ Code files<br/>‚Ä¢ Repositories"]
        TargetSchema["Target Schema<br/>‚Ä¢ Pydantic models<br/>‚Ä¢ Field definitions<br/>‚Ä¢ Validation rules"]
        ExtractionConfig["Extraction Config<br/>‚Ä¢ Mode selection<br/>‚Ä¢ Thresholds<br/>‚Ä¢ Retry limits"]
    end
    
    subgraph StrategyEngine["üéØ Strategy Selection & Execution"]
        
        subgraph StrategySelector["Strategy Selector (client.py)"]
            AutoSelect["Auto Selection<br/>‚Ä¢ Analyze complexity<br/>‚Ä¢ Check content size<br/>‚Ä¢ Pick best strategy"]
            ManualSelect["Manual Selection<br/>‚Ä¢ User specified<br/>‚Ä¢ Force strategy<br/>‚Ä¢ Override auto"]
        end
        
        subgraph Strategies["Available Strategies (strategies/)"]
            Simple["Simple Strategy<br/>‚Ä¢ Single LLM call<br/>‚Ä¢ Fast processing<br/>‚Ä¢ Basic extraction<br/>(simple.py)"]
            
            MultiStage["Multi-Stage Strategy<br/>‚Ä¢ 3-stage pipeline<br/>‚Ä¢ Progressive refinement<br/>‚Ä¢ Gap filling<br/>(multistage.py)"]
            
            Cognitive["Cognitive Strategy<br/>‚Ä¢ Uses Copilot<br/>‚Ä¢ Understanding phase<br/>‚Ä¢ Planning phase<br/>‚Ä¢ Execution phase<br/>(cognitive.py)"]
            
            Reflective["Reflective Strategy<br/>‚Ä¢ Iterative improvement<br/>‚Ä¢ Max 3 iterations<br/>‚Ä¢ Self-assessment<br/>(reflective.py)"]
        end
    end
    
    subgraph ProcessingPipeline["‚öôÔ∏è Processing Pipeline"]
        
        subgraph StageExecution["Stage Execution"]
            InitialExtraction["Initial Extraction<br/>‚Ä¢ First pass<br/>‚Ä¢ Rough structure<br/>‚Ä¢ Identify fields"]
            
            Refinement["Refinement<br/>‚Ä¢ Fill gaps<br/>‚Ä¢ Improve accuracy<br/>‚Ä¢ Add details"]
            
            Validation["Validation<br/>‚Ä¢ Schema compliance<br/>‚Ä¢ Type checking<br/>‚Ä¢ Constraint validation"]
        end
        
        subgraph QualityControl["Quality Control (utils/validator.py)"]
            SchemaValidator["Schema Validator<br/>‚Ä¢ Pydantic validation<br/>‚Ä¢ Required fields<br/>‚Ä¢ Type constraints"]
            
            ConfidenceScorer["Confidence Scorer<br/>‚Ä¢ Field confidence<br/>‚Ä¢ Overall score<br/>‚Ä¢ Strategy confidence<br/>(utils/confidence.py)"]
            
            GapAnalyzer["Gap Analyzer<br/>‚Ä¢ Missing fields<br/>‚Ä¢ Low confidence<br/>‚Ä¢ Improvement areas"]
        end
    end
    
    subgraph DataModels["üìä Data Models (models/)"]
        BaseModels["Base Models<br/>‚Ä¢ ExtractableModel<br/>‚Ä¢ Common fields<br/>‚Ä¢ Metadata<br/>(base.py)"]
        
        CodeModels["Code Models<br/>‚Ä¢ Function<br/>‚Ä¢ Class<br/>‚Ä¢ Module<br/>(code.py)"]
        
        DocumentModels["Document Models<br/>‚Ä¢ Section<br/>‚Ä¢ Article<br/>‚Ä¢ Report<br/>(document.py)"]
        
        RepositoryModels["Repository Models<br/>‚Ä¢ Repository info<br/>‚Ä¢ File structure<br/>‚Ä¢ Dependencies<br/>(repository.py)"]
    end
    
    subgraph ResultProcessing["üì§ Result Processing"]
        ResultMerger["Result Merger<br/>‚Ä¢ Combine strategies<br/>‚Ä¢ Merge iterations<br/>‚Ä¢ Consolidate data"]
        
        MetadataEnrichment["Metadata Enrichment<br/>‚Ä¢ Add timestamps<br/>‚Ä¢ Strategy used<br/>‚Ä¢ Processing time<br/>‚Ä¢ Confidence scores"]
        
        OutputFormatter["Output Formatter<br/>‚Ä¢ ExtractionResult<br/>‚Ä¢ Type-safe object<br/>‚Ä¢ JSON serializable"]
    end
    
    subgraph ErrorHandling["‚ö†Ô∏è Error Handling (core/exceptions.py)"]
        ExtractionErrors["Extraction Errors<br/>‚Ä¢ Validation failures<br/>‚Ä¢ Timeout errors<br/>‚Ä¢ Strategy failures"]
        
        RecoveryMechanism["Recovery Mechanism<br/>‚Ä¢ Retry logic<br/>‚Ä¢ Fallback strategies<br/>‚Ä¢ Partial results"]
    end
    
    %% Main Flow
    RawContent --> StrategySelector
    TargetSchema --> StrategySelector
    ExtractionConfig --> StrategySelector
    
    StrategySelector --> AutoSelect
    StrategySelector --> ManualSelect
    
    AutoSelect --> Strategies
    ManualSelect --> Strategies
    
    Simple --> InitialExtraction
    MultiStage --> InitialExtraction
    Cognitive --> InitialExtraction
    Reflective --> InitialExtraction
    
    InitialExtraction --> Refinement
    Refinement --> Validation
    
    Validation --> SchemaValidator
    SchemaValidator --> ConfidenceScorer
    ConfidenceScorer --> GapAnalyzer
    
    GapAnalyzer -->|Needs improvement| Refinement
    GapAnalyzer -->|Acceptable| ResultMerger
    
    ResultMerger --> MetadataEnrichment
    MetadataEnrichment --> OutputFormatter
    
    %% Model Integration
    TargetSchema --> BaseModels
    BaseModels --> CodeModels
    BaseModels --> DocumentModels
    BaseModels --> RepositoryModels
    
    %% Error Flows
    InitialExtraction -.->|Error| ExtractionErrors
    Refinement -.->|Error| ExtractionErrors
    Validation -.->|Error| ExtractionErrors
    ExtractionErrors --> RecoveryMechanism
    RecoveryMechanism -.->|Retry| Strategies
    
    %% Confidence Feedback
    ConfidenceScorer -.->|Low confidence| Reflective
    
    style StrategyEngine fill:#1e3a5f,stroke:#3b82f6,stroke-width:3px
    style ProcessingPipeline fill:#1e453f,stroke:#10b981,stroke-width:2px
    style DataModels fill:#312e4f,stroke:#8b5cf6,stroke-width:2px
    style ResultProcessing fill:#1e293b,stroke:#f59e0b,stroke-width:2px
    style ErrorHandling fill:#3f2e1e,stroke:#ef4444,stroke-width:2px
    
    %% Implementation Status
    subgraph Legend["üìå Implementation Status"]
        AllImplemented["‚úÖ All components shown are fully implemented"]
        FilesUsed["üìÅ Files: client.py, strategies/*, models/*, utils/*"]
    end
    
    style Legend fill:#1a1a2e,stroke:#666,stroke-width:1px,stroke-dasharray: 5 5